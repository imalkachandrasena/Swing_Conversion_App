/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package akid_convertor;

import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Imalka_c
 */
public class Capacity extends javax.swing.JInternalFrame {

    /**
     * Creates new form Speed
     */
    Dashboard dashboard;
    public Capacity(Dashboard dashboard) {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        this.dashboard = dashboard;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcFrom = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtConvert = new javax.swing.JTextField();
        jbtncon = new javax.swing.JButton();
        jbtnreset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jcTo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(462, 322));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Capacity Convertor");

        jcFrom.setBackground(new java.awt.Color(204, 204, 204));
        jcFrom.setForeground(new java.awt.Color(0, 0, 0));
        jcFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bit", "byte", "kb", "mb", "gb", "tb" }));
        jcFrom.setSelectedItem(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Enter the first value :");

        txtValue.setBackground(new java.awt.Color(204, 204, 204));
        txtValue.setForeground(new java.awt.Color(0, 0, 0));
        txtValue.setCaretColor(new java.awt.Color(0, 0, 0));
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValueKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("The converted value :");

        txtConvert.setEditable(false);
        txtConvert.setBackground(new java.awt.Color(204, 204, 204));
        txtConvert.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtConvert.setForeground(new java.awt.Color(0, 51, 51));
        txtConvert.setCaretColor(new java.awt.Color(0, 0, 0));

        jbtncon.setBackground(new java.awt.Color(0, 102, 102));
        jbtncon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtncon.setForeground(new java.awt.Color(255, 204, 0));
        jbtncon.setText("Convert");
        jbtncon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jbtncon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnconActionPerformed(evt);
            }
        });

        jbtnreset.setBackground(new java.awt.Color(0, 102, 102));
        jbtnreset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtnreset.setForeground(new java.awt.Color(255, 204, 0));
        jbtnreset.setText("Reset");
        jbtnreset.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jbtnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnresetActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 102, 102));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 204, 0));
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jcTo.setBackground(new java.awt.Color(204, 204, 204));
        jcTo.setForeground(new java.awt.Color(0, 0, 0));
        jcTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bit", "byte", "kb", "mb", "gb", "tb" }));
        jcTo.setSelectedItem(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("From");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("To");

        btnSave.setBackground(new java.awt.Color(0, 102, 102));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 204, 0));
        btnSave.setText("Save");
        btnSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcTo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtncon, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtConvert, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(txtValue))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcTo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtncon, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        Convert convert = new Convert(this.dashboard);
        dashboard.smallDesktop.removeAll();
        dashboard.smallDesktop.add(convert).setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtValueKeyTyped

    private void jbtnconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnconActionPerformed
     if(txtValue.getText().equals("")||jcFrom.getSelectedItem()==null||jcTo.getSelectedItem()==null){
            JOptionPane.showMessageDialog(rootPane, "Please select convertion type or enter the value.","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Double value = Double.valueOf(txtValue.getText());
            String fromType = jcFrom.getSelectedItem().toString();
            String fromTo = jcTo.getSelectedItem().toString();

            Capacity.CapacityCon converter = new Capacity.CapacityCon();
            double result = converter.convertCapacity(fromType, fromTo, value);
            String print = String.format("%.15f", result);
            txtConvert.setText(print);
            btnSave.setEnabled(true);
        }
    }//GEN-LAST:event_jbtnconActionPerformed

    private void jbtnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnresetActionPerformed
        jcFrom.setSelectedItem(null);
        jcTo.setSelectedItem(null);
        txtValue.setText(null);
        txtConvert.setText(null);
        btnSave.setEnabled(false);
    }//GEN-LAST:event_jbtnresetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        DBConnection connection = new DBConnection();
        connection.saveData(dashboard.username, jcFrom.getSelectedItem().toString(), jcTo.getSelectedItem().toString(),Double.parseDouble(txtValue.getText()), Double.parseDouble(txtConvert.getText()));
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        btnSave.setEnabled(false);
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtncon;
    private javax.swing.JButton jbtnreset;
    private javax.swing.JComboBox<String> jcFrom;
    private javax.swing.JComboBox<String> jcTo;
    private javax.swing.JTextField txtConvert;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
     class CapacityCon{
    public double convertCapacity(String fromCapacity, String toCapacity, double value) {
        
        double bitToByte = 0.125 ;
        double bitToKb = 0.000125 ;
        double bitToMb = 0.000000125 ;
        double bitToGb = 0.000000000125 ;
        double bitToTb = 0.000000000000125 ;
        //double bitToInch = 0.0393;
        
        double valueInbit;
        switch (fromCapacity) {
            case "bit":
                valueInbit = value;
                break;
            case "byte":
                valueInbit = value / bitToByte;
                break;
            case "kb":
                valueInbit = value / bitToKb;
                break;
            case "mb":
                valueInbit = value / bitToMb;
                break;
            case "gb":
                valueInbit = value / bitToGb;
                break;
            case "tb":
                valueInbit = value / bitToTb;
                break;
//            case "inch":
//                valueInmm = value / bitToInch;
//                break;
            default:
                throw new IllegalArgumentException("Conversion from " + fromCapacity + " is not supported.");
        }

       
        double convertedValue;
        switch (toCapacity) {
            case "bit":
                convertedValue = valueInbit;
                break;
            case "byte":
                convertedValue = valueInbit * bitToByte;
                break;
            case "kb":
                convertedValue = valueInbit * bitToKb;
                break;
            case "mb":
                convertedValue = valueInbit * bitToMb;
                break;
            case "gb":
                convertedValue = valueInbit * bitToGb;
                break;
            case "tb":
                convertedValue = valueInbit * bitToTb;
                break;
//            case "inch":
//                convertedValue = valueInmm * mmToInch;
//                break;
            default:
                throw new IllegalArgumentException("Conversion to " + toCapacity + " is not supported.");
        }

        return convertedValue;
    }
    }
}
