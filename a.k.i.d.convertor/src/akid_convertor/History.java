/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package akid_convertor;

import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Imalka_c
 */
public class History extends javax.swing.JInternalFrame {

    /**
     * Creates new form History
     */
    Dashboard dashboard;

    public History(Dashboard dashboard) {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        this.dashboard = dashboard;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tblHistory.setBackground(new java.awt.Color(0, 153, 153));
        tblHistory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 51), 1, true));
        tblHistory.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblHistory.setForeground(new java.awt.Color(51, 51, 51));
        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "From Type", "To Type", "From Value", "To Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHistory);

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class Data {

        private String date;
        private String time;
        private String fromType;
        private String toType;
        private String preValue;
        private String pastValue;

        public Data(String date, String time, String fromType, String toType, String preValue, String pastValue) {
            this.date = date;
            this.time = time;
            this.fromType = fromType;
            this.toType = toType;
            this.preValue = preValue;
            this.pastValue = pastValue;
        }

        public String getDate() {
            return date;
        }

        public String getTime() {
            return time;
        }

        public String getFromType() {
            return fromType;
        }

        public String getToType() {
            return toType;
        }

        public String getPreValue() {
            return preValue;
        }

        public String getPastValue() {
            return pastValue;
        }

    }

    ArrayList<Data> getHistory(String username) {
        ArrayList<Data> gethistory = new ArrayList<Data>();
        String setStatement = "SELECT * FROM historydetails WHERE Username ='" + username + "'";
        Data data;
        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/groupproject", "root", "");
            Statement statement = con.createStatement();
            ResultSet resultSet = statement.executeQuery(setStatement);
            while (resultSet.next()) {
                data = new Data(
                        resultSet.getDate(3).toString(),
                        resultSet.getTime(4).toString(),
                        resultSet.getString(5),
                        resultSet.getString(6),
                        Double.toString(resultSet.getDouble(7)),
                        Double.toString(resultSet.getDouble(8))
                );
                gethistory.add(data);
            }

            //close the connection - 06
            con.close();

        } catch (Exception e) {
            System.out.println("Hello " + e);
        }

        if (gethistory.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "You have not done any conversions to show.");
        }
        return gethistory;
    }


    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        DBConnection connection = new DBConnection();
        connection.getData(dashboard.username);
        Profile profile = new Profile(connection.firstname, connection.lastname, connection.gender, connection.password, this.dashboard, connection.username);
        dashboard.smallDesktop.removeAll();
        dashboard.smallDesktop.add(profile).setVisible(true);

        dashboard.lblChangeText.setText("Dashboard - Profile");
    }//GEN-LAST:event_btnBackActionPerformed


    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        DefaultTableModel tbmodel = (DefaultTableModel) tblHistory.getModel();
        Object rowData[] = new Object[6];
        //System.out.println(getHistory(dashboard.username).get(0).getPreValue());
        for (int i = 0; i < getHistory(dashboard.username).size(); i++) {
            rowData[0] = getHistory(dashboard.username).get(i).getDate();
            rowData[1] = getHistory(dashboard.username).get(i).getTime();
            rowData[2] = getHistory(dashboard.username).get(i).getFromType();
            rowData[3] = getHistory(dashboard.username).get(i).getToType();
            rowData[4] = getHistory(dashboard.username).get(i).getPreValue();
            rowData[5] = getHistory(dashboard.username).get(i).getPastValue();

            tbmodel.addRow(rowData);
        }

    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistory;
    // End of variables declaration//GEN-END:variables
}
